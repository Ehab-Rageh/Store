<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>